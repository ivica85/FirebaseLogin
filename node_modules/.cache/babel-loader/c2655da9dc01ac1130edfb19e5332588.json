{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Ivancic\\\\Desktop\\\\FirebaseLogin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _objectSpread from \"C:\\\\Users\\\\Ivancic\\\\Desktop\\\\FirebaseLogin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Ivancic\\\\Desktop\\\\FirebaseLogin\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { firebaseConfig } from './Utils';\nfirebase.initializeApp(firebaseConfig);\nexport var auth = firebase.auth();\nexport var firestore = firebase.firestore();\n/**\r\n * ? Googgle signInWithPopup login\r\n */\n\nvar GoogleProvider = new firebase.auth.GoogleAuthProvider();\nGoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport var signWithGoogle = function signWithGoogle() {\n  return auth.signInWithPopup(GoogleProvider);\n};\n/**\r\n * ! Saving data od korisnika u firebase\r\n */\n\nexport var handleUserProvider = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(authUser, additionData) {\n    var uid, userRef, snapShot, displayName, email, timeStamp;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            uid = authUser.uid;\n            userRef = firestore.doc(\"users/\".concat(uid));\n            _context.next = 4;\n            return userRef.get();\n\n          case 4:\n            snapShot = _context.sent;\n\n            if (snapShot.exists) {\n              _context.next = 16;\n              break;\n            }\n\n            displayName = authUser.displayName, email = authUser.email;\n            timeStamp = new Date();\n            _context.prev = 8;\n            _context.next = 11;\n            return userRef.set(_objectSpread({\n              displayName,\n              email,\n              createDate: timeStamp\n            }, additionData));\n\n          case 11:\n            _context.next = 16;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](8);\n            console.log(_context.t0);\n\n          case 16:\n            return _context.abrupt(\"return\", userRef);\n\n          case 17:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee, null, [[8, 13]]);\n  }));\n\n  return function handleUserProvider(_x, _x2) {\n    return _ref.apply(this, arguments);\n  };\n}();","map":{"version":3,"sources":["C:/Users/Ivancic/Desktop/FirebaseLogin/src/Firebase/Config.js"],"names":["firebase","firebaseConfig","initializeApp","auth","firestore","GoogleProvider","GoogleAuthProvider","setCustomParameters","prompt","signWithGoogle","signInWithPopup","handleUserProvider","authUser","additionData","uid","userRef","doc","get","snapShot","exists","displayName","email","timeStamp","Date","set","createDate","console","log"],"mappings":";;;AAAA,OAAOA,QAAP,MAAqB,cAArB;AACA,OAAO,oBAAP;AACA,OAAO,eAAP;AACA,SAASC,cAAT,QAA+B,SAA/B;AAEAD,QAAQ,CAACE,aAAT,CAAuBD,cAAvB;AAEA,OAAO,IAAME,IAAI,GAAGH,QAAQ,CAACG,IAAT,EAAb;AACP,OAAO,IAAMC,SAAS,GAAGJ,QAAQ,CAACI,SAAT,EAAlB;AAEP;;;;AAIA,IAAMC,cAAc,GAAG,IAAIL,QAAQ,CAACG,IAAT,CAAcG,kBAAlB,EAAvB;AACAD,cAAc,CAACE,mBAAf,CAAmC;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAAnC;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAMN,IAAI,CAACO,eAAL,CAAqBL,cAArB,CAAN;AAAA,CAAvB;AAEP;;;;AAIA,OAAO,IAAMM,kBAAkB;AAAA,sEAAG,iBAAOC,QAAP,EAAiBC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,GADwB,GAChBF,QADgB,CACxBE,GADwB;AAG1BC,YAAAA,OAH0B,GAGhBX,SAAS,CAACY,GAAV,iBAAuBF,GAAvB,EAHgB;AAAA;AAAA,mBAKTC,OAAO,CAACE,GAAR,EALS;;AAAA;AAK1BC,YAAAA,QAL0B;;AAAA,gBAO3BA,QAAQ,CAACC,MAPkB;AAAA;AAAA;AAAA;;AAQtBC,YAAAA,WARsB,GAQCR,QARD,CAQtBQ,WARsB,EAQTC,KARS,GAQCT,QARD,CAQTS,KARS;AASxBC,YAAAA,SATwB,GASZ,IAAIC,IAAJ,EATY;AAAA;AAAA;AAAA,mBAYtBR,OAAO,CAACS,GAAR;AACJJ,cAAAA,WADI;AAEJC,cAAAA,KAFI;AAGJI,cAAAA,UAAU,EAAEH;AAHR,eAIDT,YAJC,EAZsB;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAmB5Ba,YAAAA,OAAO,CAACC,GAAR;;AAnB4B;AAAA,6CAsBzBZ,OAtByB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBJ,kBAAkB;AAAA;AAAA;AAAA,GAAxB","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { firebaseConfig } from './Utils';\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\n/**\r\n * ? Googgle signInWithPopup login\r\n */\r\n\r\nconst GoogleProvider = new firebase.auth.GoogleAuthProvider();\r\nGoogleProvider.setCustomParameters({ prompt: 'select_account' });\r\n\r\nexport const signWithGoogle = () => auth.signInWithPopup(GoogleProvider);\r\n\r\n/**\r\n * ! Saving data od korisnika u firebase\r\n */\r\n\r\nexport const handleUserProvider = async (authUser, additionData) => {\r\n  const { uid } = authUser;\r\n\r\n  const userRef = firestore.doc(`users/${uid}`);\r\n\r\n  const snapShot = await userRef.get();\r\n\r\n  if (!snapShot.exists) {\r\n    const { displayName, email } = authUser;\r\n    const timeStamp = new Date();\r\n\r\n    try {\r\n      await userRef.set({\r\n        displayName,\r\n        email,\r\n        createDate: timeStamp,\r\n        ...additionData,\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n  return userRef;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}